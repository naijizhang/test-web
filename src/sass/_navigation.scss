.menubar {
  display: flex;
  @include flex(row, space-between, center);
  width: 100%;
  position: fixed;
  top: 0px;
  background: rgba(85,99,226,0.8);
  z-index: 9999;
}
.navlinks {
  display: flex;
  @include flex(row, space-evenly, center);
  height: 50px;
  padding: 0 20px;
  width: 75%;

  @include tablet {
    // background: #171717;
    height: 50px;
    margin: auto;
    width: 65%;
    padding: 0;
  }
  @include desktop {
    height: 60px;
    width: 50%;
  }
}

.links {
  color: $light;
  font-size: $xxxs;
  font-weight: 700;
  text-decoration: none;
  text-transform: uppercase;
  display: flex;
  @include flex(column, space-between, center);
  letter-spacing: 1px;
  opacity: 0.8;

  &:hover {
    color: $color-main;
    opacity: 1;
  }
  a:active {
    color: $color-main;
    opacity: 1;
  }

  @include tablet {
    font-size: $xxs;
    letter-spacing: 1.5px;
    // height: 40px;/
  }
  @include desktop {
    font-size: 15px;
  }

  img {
    height: 45px;
    width: auto;

    @include tablet {
      height: 50px;
    }
    @include desktop {
      // height: 54px;
    }
  }
}

/*    Github Icon    */
.github-nav {
  position: absolute;
  right: 10px;
  display: flex;
  flex-direction: row;

  @include tablet {
    right: 5%;
  }

  .github {
    background: transparent;
    display: block;
    position: relative;
    width: 20px;
    height: 20px;
    z-index: 10;
    margin-right: 10px;

    @include tablet {
      width: 25px;
      height: 25px;
    }
  }

  .githubBG {
    background-color: $light;
    border-radius: 55%;
    width: 40px;
    height: 30px;
    position: absolute;

    &:hover {
      background-color: $color-main;
    }
  }
  // .github-hover {
  //   display: none;
  //   &:hover {
  //     display: block;
  //     height: 50px;
  //     width: 50px;
  //   }
  // }
}
.active {
  text-decoration: none;
}

/*   
 *    BMO    
 */
.bmo-wrapper {
  position: fixed;
  top: 1.1rem;
  right: 7%;
  display: flex;
  @include flex();
  z-index: 100;

  @include tablet {
    top: 5%;
  }
  @include desktop {
    top: 7%;
    right: 5%;
  }

  .bmo-btn {
    // background: rgba(255, 255, 255, 0.9);
    background: $color-sec;
    opacity: 0.85;
    color: $light;
    position: relative;
    padding: 4px 7px;
    text-shadow: 0px -1px 5px darkblue;
    // width: 52px;
    // height: 50px;
    z-index: 100;

    &:hover {
      background: $light;
      color: $light;
      opacity: 0.97;
    }

    @include tablet {
      width: 62px;
      height: 60px;
    }
    @include desktop {
      width: 67px;
      height: 65px;
    }

    .bmo-icon {
      align-self: center;
      color: $light;
      width: 48px;
      height: auto;
      opacity: 1;
      z-index: 99;

      @include tablet {
        padding: 3px;
        width: 50px;
      }
      @include desktop {
        width: 54px;
      }
    }

    .bmo-text {
      // color: $light;
      font-family: 'Courier New', Courier, monospace;
      font-size: $sm;
      font-weight: 600;
      text-transform: capitalize;
      margin: 0;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 8;
    }
  }

  .pulse:hover,
  .pulse:focus {
    animation: pulse 1s;
    box-shadow: 0 0 0 2em rgba(#fff, 0);
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 var(--hover);
    }
  }
} // end of BMO

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
// Make a map with the class names and matching colors
$colors: (
  fill: #a972cb,
  pulse: $color-main,
  //#ef6eae
    close: #ff7f82,
  raise: #ffa260,
  up: #e4cb58,
  slide: #8fc866,
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
// Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
button {
  color: var(--color);
  transition: 0.25s;

  &:hover,
  &:focus {
    border-color: var(--hover);
    color: #fff;
  }
}
